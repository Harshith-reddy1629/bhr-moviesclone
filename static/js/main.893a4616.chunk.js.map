{"version":3,"sources":["components/ProtectedRoute/index.js","components/NoInternet/index.js","components/Login/index.js","components/Header/index.js","components/MovieItem/index.js","components/TrendingNow/index.js","components/Originals/index.js","components/Contacts/index.js","components/Home/index.js","components/Search/index.js","components/Account/index.js","components/Popular/index.js","components/NotFound/index.js","components/MovieDetails/index.js","App.js","index.js"],"names":["ProtectedRoute","props","undefined","Cookie","get","to","key","v4","NoInternet","className","type","onClick","LoginPage","Login","state","username","password","displayError","errorMsg","noInternet","setState","onSubmitSuccess","jwtToken","history","Cookies","set","expires","path","replace","onSubmitFailure","console","log","usernameChange","event","target","value","passwordChange","onSubmittingForm","a","preventDefault","userDetails","options","method","body","JSON","stringify","fetch","response","json","data","ok","jwt_token","error_msg","this","src","alt","onSubmit","htmlFor","id","placeholder","onChange","Component","Header","searchValue","ismobileHeaderVisible","onSearchTyping","onClickSearch","fetchData","onMenu","prevState","match","isSearchRoute","isHome","color","size","withRouter","MovieItem","items","title","posterPath","pageStatus","TrendingNow","status","TrendingList","tryAgain","failureView","successView","slidesToShow","slidesToScroll","infinite","map","each","loadingView","height","width","headers","AuthoriZation","receivedResults","results","fetchedData","backdropPath","backdrop_path","overview","poster_path","Originals","OriginalsList","onTryAgain","Contacts","Home","posterView","posterSuccessView","selectedMovie","Math","floor","random","length","style","backgroundImage","Search","searchList","searched","searchRoute","SuccessView","emptyView","valueOFSearch","requiredUrl","Authorization","Account","remove","Popular","popularList","popularView","recievedResults","NotFound","MovieDetails","movieDetails","similarMoviesList","movieDetailsView","getDateFormat","dateOfRel","releaseDate","releasedDateInFormat","Date","dateOf","getDate","dayOfRel","getMonth","yearOfRel","getFullYear","runtime","adult","genres","spokenLanguage","voteCount","voteAverage","budget","dateF","slice","name","english_name","params","receivedMovieDetails","movie_details","receivedSimilarMovies","similar_movies","similarMovies","release_date","spoken_languages","vote_average","vote_count","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.893a4616.chunk.js","sourcesContent":["import {v4} from 'uuid'\n\nimport {Redirect, Route} from 'react-router-dom'\n\nimport Cookie from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookie.get('jwt_token')\n\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return <Route {...props} key={v4()} />\n}\n\nexport default ProtectedRoute\n","import './index.css'\n\nconst NoInternet = props => {\n  const goToLoginPage = () => {\n    const {LoginPage} = props\n    LoginPage()\n  }\n  return (\n    <div className=\"no-internet-container\">\n      <h1>No Internet</h1>\n      <button type=\"button\" onClick={goToLoginPage} className=\"try-again-btn\">\n        Try Again\n      </button>\n    </div>\n  )\n}\n\nexport default NoInternet\n","import {Component} from 'react'\n\nimport Cookies from 'js-cookie'\n\nimport {Redirect} from 'react-router-dom'\n\nimport './index.css'\nimport NoInternet from '../NoInternet'\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    displayError: false,\n    errorMsg: '',\n    noInternet: false,\n  }\n\n  LoginPage = () => {\n    this.setState({noInternet: false})\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    console.log(errorMsg)\n    this.setState({displayError: true, errorMsg})\n  }\n\n  usernameChange = event => {\n    this.setState({username: event.target.value})\n  }\n\n  passwordChange = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmittingForm = async event => {\n    event.preventDefault()\n\n    const {username, password} = this.state\n    let userDetails = {username, password}\n    if (username === 'harshith1629' && password === 'Am1629') {\n      userDetails = {username: 'rahul', password: 'rahul@2021'}\n    }\n    const apiUrl = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n\n    try {\n      const response = await fetch(apiUrl, options)\n      const data = await response.json()\n      if (response.ok === true) {\n        this.onSubmitSuccess(data.jwt_token)\n      } else {\n        this.onSubmitFailure(data.error_msg)\n      }\n    } catch (error) {\n      this.setState({noInternet: true})\n    }\n  }\n\n  render() {\n    const {username, password, displayError, errorMsg, noInternet} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n\n    const validToken = jwtToken !== undefined\n\n    if (validToken) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <div className=\"login-container\">\n        <div>\n          <img\n            className=\"login-logo\"\n            src=\"https://res.cloudinary.com/reddyimgs/image/upload/v1686991944/Group_7399_smufhc.png\"\n            alt=\"login website logo\"\n          />\n        </div>\n        {!noInternet ? (\n          <div className=\"login-card\">\n            <h1 className=\"login-heading\">Login</h1>\n            <form onSubmit={this.onSubmittingForm} className=\"form-container\">\n              <div className=\"username-input-container\">\n                <label className=\"username-label\" htmlFor=\"username\">\n                  USERNAME\n                </label>\n                <input\n                  className=\"username-input\"\n                  id=\"username\"\n                  placeholder=\"Username\"\n                  value={username}\n                  type=\"text\"\n                  onChange={this.usernameChange}\n                />\n              </div>\n              <div className=\"password-input-container\">\n                <label className=\"password-label\" htmlFor=\"password\">\n                  PASSWORD\n                </label>\n                <input\n                  className=\"username-input\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  type=\"password\"\n                  onChange={this.passwordChange}\n                />\n              </div>\n              {displayError && <p className=\"error-message\">*{errorMsg}</p>}\n\n              <div className=\"login-button-container\">\n                <button className=\"login-button\" type=\"submit\">\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        ) : (\n          <NoInternet LoginPage={this.LoginPage} />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import {Component} from 'react'\n\nimport {Link, withRouter} from 'react-router-dom'\n\nimport {HiOutlineSearch} from 'react-icons/hi'\n\nimport {AiOutlineMenuUnfold} from 'react-icons/ai'\n\nimport {ImCross} from 'react-icons/im'\n\nimport './index.css'\n\nclass Header extends Component {\n  state = {searchValue: '', ismobileHeaderVisible: false}\n\n  onSearchTyping = event => {\n    this.setState({searchValue: event.target.value})\n  }\n\n  onClickSearch = () => {\n    const {fetchData} = this.props\n\n    const {searchValue} = this.state\n\n    if (searchValue !== '') {\n      fetchData(searchValue)\n    }\n  }\n\n  onMenu = () => {\n    this.setState(prevState => ({\n      ismobileHeaderVisible: !prevState.ismobileHeaderVisible,\n    }))\n  }\n\n  render() {\n    const {searchValue, ismobileHeaderVisible} = this.state\n\n    const {match} = this.props\n\n    const {path} = match\n\n    console.log(path)\n\n    const isSearchRoute = path === '/search'\n\n    const condition = path === '/movies/:id' || path === '/'\n\n    const isHome = condition ? 'home-class' : ''\n\n    // const isPopular = path === '/popular'\n\n    return (\n      <header className={`header-container ${isHome}`}>\n        <nav className=\"nav-container\">\n          <Link to=\"/\">\n            <img\n              alt=\"website logo\"\n              src=\"https://res.cloudinary.com/reddyimgs/image/upload/v1689919947/Group_7399_ashfla.png\"\n              className=\"website-logo\"\n            />\n          </Link>\n\n          <ul className=\"header-list-container-1  ul-1\">\n            <Link className=\"nav-link-item\" to=\"/\">\n              <li>\n                <button className=\"nav-home-button\" type=\"button\">\n                  Home\n                </button>\n              </li>\n            </Link>\n\n            <Link className=\"nav-link-item\" to=\"/popular\">\n              <li>\n                <button className=\"nav-popular-button\" type=\"button\">\n                  Popular\n                </button>\n              </li>\n            </Link>\n          </ul>\n\n          <div className=\" header-list-container-1  ul-2\">\n            {isSearchRoute ? (\n              <div className=\"nav-search-container\">\n                <input\n                  type=\"search\"\n                  onChange={this.onSearchTyping}\n                  value={searchValue}\n                  placeholder=\"Search\"\n                  className=\"nav-search-input\"\n                />\n\n                <button\n                  onClick={this.onClickSearch}\n                  className=\"header-button search-btn\"\n                  type=\"button\"\n                  data-testid=\"searchButton\"\n                >\n                  <HiOutlineSearch />\n                </button>\n              </div>\n            ) : (\n              <Link className=\"nav-link-item\" to=\"/search\">\n                <button\n                  className=\"nav-search-button\"\n                  type=\"button\"\n                  data-testid=\"searchButton\"\n                >\n                  <HiOutlineSearch />\n                </button>\n              </Link>\n            )}\n          </div>\n          <div className=\" ul-1\">\n            <Link className=\"nav-link-item\" to=\"/account\">\n              <img\n                className=\"profile-icon\"\n                src=\"https://res.cloudinary.com/reddyimgs/image/upload/v1687011162/Avatar_zhzj4v.png\"\n                alt=\"profile\"\n              />\n            </Link>\n          </div>\n          <div className=\"mobile-view\">\n            <button type=\"button\" className=\"menu-btn\" onClick={this.onMenu}>\n              {!ismobileHeaderVisible ? (\n                <AiOutlineMenuUnfold color=\"white\" size={22} />\n              ) : (\n                <ImCross color=\"white\" />\n              )}\n            </button>\n          </div>\n        </nav>\n        {ismobileHeaderVisible && (\n          <div className=\"mobile-view\">\n            <ul className=\" mobile-view-menu\">\n              <Link className=\"nav-link-item\" to=\"/\">\n                <li>\n                  <button className=\"nav-home-button\" type=\"button\">\n                    Home\n                  </button>\n                </li>\n              </Link>\n              <Link className=\"nav-link-item\" to=\"/popular\">\n                <li>\n                  <button className=\"nav-popular-button\" type=\"button\">\n                    Popular\n                  </button>\n                </li>\n              </Link>{' '}\n              <Link className=\"nav-link-item\" to=\"/account\">\n                <li>\n                  <button className=\"nav-popular-button\" type=\"button\">\n                    Account\n                  </button>\n                </li>\n              </Link>\n            </ul>\n          </div>\n        )}\n      </header>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst MovieItem = props => {\n  const {items} = props\n\n  const {id, title, posterPath} = items\n\n  return (\n    <li className=\"slider-img-container\">\n      <Link to={`/movies/${id}`}>\n        <img alt={title} src={posterPath} className=\"slider-image\" />\n      </Link>\n    </li>\n  )\n}\n\nexport default MovieItem\n","import {Component} from 'react'\nimport Slider from 'react-slick'\n\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport MovieItem from '../MovieItem'\n\nimport './index.css'\n\nconst pageStatus = {\n  Loading: 'LOADING',\n  Success: 'SUCCESS',\n  Failed: 'FAILED',\n}\n\nclass TrendingNow extends Component {\n  state = {status: pageStatus.Loading, TrendingList: []}\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  tryAgain = () => {\n    this.fetchData()\n  }\n\n  failureView = () => (\n    <div className=\"trending-fv\">\n      <img\n        src=\"https://res.cloudinary.com/reddyimgs/image/upload/v1687103762/alert-triangle_fqs6cl.png\"\n        alt=\"failure view\"\n      />\n\n      <p> Something went wrong. Please try again </p>\n\n      <button type=\"button\" className=\"try-again-btn\" onClick={this.tryAgain}>\n        Try Again\n      </button>\n    </div>\n  )\n\n  successView = () => {\n    const {TrendingList} = this.state\n\n    const settings = {\n      slidesToShow: 4,\n      slidesToScroll: 3,\n      infinite: false,\n    }\n    const mobilesettings = {\n      slidesToShow: 3,\n      slidesToScroll: 3,\n      infinite: false,\n    }\n\n    return (\n      <>\n        <ul className=\"slider-container\">\n          <Slider {...settings} className=\"slider-bar large-View\">\n            {TrendingList.map(each => (\n              <MovieItem key={each.id} items={each} />\n            ))}\n          </Slider>\n          <Slider {...mobilesettings} className=\"mobile-view\">\n            {TrendingList.map(each => (\n              <MovieItem key={each.id} items={each} />\n            ))}\n          </Slider>\n        </ul>\n      </>\n    )\n  }\n\n  loadingView = () => (\n    <div className=\"trending-lv\" data-testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n    </div>\n  )\n\n  fetchData = async () => {\n    this.setState({status: pageStatus.Loading})\n\n    const reqUrl = 'https://apis.ccbp.in/movies-app/trending-movies'\n\n    const jwtToken = Cookies.get('jwt_token')\n\n    const options = {\n      method: 'GET',\n      headers: {\n        AuthoriZation: `Bearer ${jwtToken}`,\n      },\n    }\n\n    try {\n      const response = await fetch(reqUrl, options)\n\n      const data = await response.json()\n\n      if (response.ok) {\n        const receivedResults = data.results\n\n        const fetchedData = receivedResults.map(each => ({\n          backdropPath: each.backdrop_path,\n          id: each.id,\n          overview: each.overview,\n          posterPath: each.poster_path,\n          title: each.title,\n        }))\n\n        this.setState({status: pageStatus.Success, TrendingList: fetchedData})\n      } else {\n        this.setState({status: pageStatus.Failed})\n      }\n    } catch (error) {\n      this.setState({status: pageStatus.Failed})\n    }\n  }\n\n  render() {\n    const {status} = this.state\n\n    switch (status) {\n      case pageStatus.Success:\n        return this.successView()\n      case pageStatus.Failed:\n        return this.failureView()\n      case pageStatus.Loading:\n        return this.loadingView()\n      default:\n        return null\n    }\n  }\n}\n\nexport default TrendingNow\n","import Slider from 'react-slick'\n\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport Loader from 'react-loader-spinner'\n// import Cookies from 'js-cookie'\n\nimport MovieItem from '../MovieItem'\n\nimport './index.css'\n\nconst pageStatus = {\n  Loading: 'LOADING',\n  Success: 'SUCCESS',\n  Failed: 'FAILED',\n}\n\nconst Originals = props => {\n  const {status, OriginalsList, tryAgain} = props\n\n  const onTryAgain = () => {\n    tryAgain()\n  }\n\n  const failureView = () => (\n    <div className=\"original-fv\">\n      <img\n        src=\"https://res.cloudinary.com/reddyimgs/image/upload/v1687103762/alert-triangle_fqs6cl.png\"\n        alt=\"failure view\"\n      />\n\n      <p> Something went wrong. Please try again </p>\n\n      <button type=\"button\" className=\"try-again-btn\" onClick={onTryAgain}>\n        Try Again\n      </button>\n    </div>\n  )\n\n  const successView = () => {\n    const settings = {\n      slidesToShow: 4,\n      slidesToScroll: 3,\n      infinite: false,\n    }\n    const mobilesettings = {\n      slidesToShow: 3,\n      slidesToScroll: 3,\n      infinite: false,\n    }\n\n    return (\n      <>\n        <ul className=\"slider-container\">\n          <Slider {...settings} className=\"slider-bar large-View\">\n            {OriginalsList.map(each => (\n              <MovieItem key={each.id} items={each} />\n            ))}\n          </Slider>{' '}\n          <Slider {...mobilesettings} className=\"mobile-view\">\n            {OriginalsList.map(each => (\n              <MovieItem key={each.id} items={each} />\n            ))}\n          </Slider>\n        </ul>\n      </>\n    )\n  }\n\n  const loadingView = () => (\n    <div className=\"original-lv\" data-testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n    </div>\n  )\n\n  switch (status) {\n    case pageStatus.Success:\n      return successView()\n    case pageStatus.Failed:\n      return failureView()\n    case pageStatus.Loading:\n      return loadingView()\n    default:\n      return null\n  }\n}\n\nexport default Originals\n","import {FaGoogle, FaTwitter, FaInstagram, FaYoutube} from 'react-icons/fa'\n\nimport './index.css'\n\nconst Contacts = () => (\n  <div className=\"contacts-container\">\n    <div className=\"contact-icons-container\">\n      <FaGoogle />\n\n      <FaTwitter />\n\n      <FaInstagram />\n\n      <FaYoutube />\n    </div>\n\n    <p className=\"contact-text\"> Contact us </p>\n  </div>\n)\n\nexport default Contacts\n","import {Component} from 'react'\n\nimport {Link} from 'react-router-dom'\n\nimport Loader from 'react-loader-spinner'\n\nimport Cookies from 'js-cookie'\n\nimport Header from '../Header'\n\nimport TrendingNow from '../TrendingNow'\n\nimport Originals from '../Originals'\n\nimport Contacts from '../Contacts'\n\nimport './index.css'\n\nconst pageStatus = {\n  Loading: 'LOADING',\n  Success: 'SUCCESS',\n  Failed: 'FAILED',\n}\n\nclass Home extends Component {\n  state = {OriginalsList: [], status: 'LOADING'}\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  tryAgain = () => {\n    this.fetchData()\n  }\n\n  posterView = () => {\n    const {status} = this.state\n\n    switch (status) {\n      case pageStatus.Loading:\n        return this.loadingView()\n      case pageStatus.Success:\n        return this.posterSuccessView()\n      case pageStatus.Failed:\n        return this.failureView()\n      default:\n        return null\n    }\n  }\n\n  posterSuccessView = () => {\n    const {OriginalsList} = this.state\n\n    const randomNo = Math.floor(Math.random() * OriginalsList.length)\n\n    const selectedMovie = OriginalsList[randomNo]\n\n    const {id, title, overview, backdropPath} = selectedMovie\n\n    return (\n      <div\n        style={{\n          backgroundImage: `linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(24, 24, 24, 0.2896875) 78.26%, #181818 93.82%, #181818 96.68%, #181818 108.61%) , url(${backdropPath})`,\n        }}\n        className=\"poster-container\"\n      >\n        <div className=\"poster-content\">\n          <h1 className=\"poster-heading\">{title}</h1>\n\n          <p className=\"poster-para\">{overview}</p>\n\n          <Link to={`/movies/${id}`}>\n            <button className=\"poster-button\" type=\"button\">\n              Play\n            </button>\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  failureView = () => (\n    <div className=\"home-failure-view\">\n      <img\n        src=\"https://res.cloudinary.com/reddyimgs/image/upload/v1687103762/alert-triangle_fqs6cl.png\"\n        alt=\"failure view\"\n      />\n\n      <p> Something went wrong. Please try again </p>\n\n      <button type=\"button\" className=\"try-again-btn\" onClick={this.tryAgain}>\n        Try Again\n      </button>\n    </div>\n  )\n\n  loadingView = () => (\n    <div className=\"home-loading-view\" data-testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n    </div>\n  )\n\n  fetchData = async () => {\n    this.setState({status: pageStatus.Loading})\n\n    const jwtToken = Cookies.get('jwt_token')\n\n    const requiredUrl = 'https://apis.ccbp.in/movies-app/originals'\n\n    const options = {\n      method: 'GET',\n      headers: {\n        AuthoriZation: `Bearer ${jwtToken}`,\n      },\n    }\n\n    try {\n      const response = await fetch(requiredUrl, options)\n\n      if (response.ok === true) {\n        const data = await response.json()\n\n        const receivedResults = data.results\n\n        const fetchedData = receivedResults.map(each => ({\n          backdropPath: each.backdrop_path,\n          id: each.id,\n          overview: each.overview,\n          posterPath: each.poster_path,\n          title: each.title,\n        }))\n\n        this.setState({status: pageStatus.Success, OriginalsList: fetchedData})\n      } else {\n        this.setState({\n          status: pageStatus.Failed,\n        })\n      }\n    } catch (error) {\n      this.setState({\n        status: pageStatus.Failed,\n      })\n    }\n  }\n\n  render() {\n    const {status, OriginalsList} = this.state\n    return (\n      <>\n        <Header />\n\n        {this.posterView()}\n        <div className=\"movies-sector\">\n          <h1 className=\"trending-heading\">Trending Now </h1>\n\n          <TrendingNow />\n\n          <h1 className=\"trending-heading\">Originals </h1>\n\n          <Originals\n            status={status}\n            OriginalsList={OriginalsList}\n            tryAgain={this.tryAgain}\n          />\n        </div>\n        <Contacts />\n      </>\n    )\n  }\n}\n\nexport default Home\n","import {Component} from 'react'\n\nimport Loader from 'react-loader-spinner'\n\nimport Cookies from 'js-cookie'\n\nimport Header from '../Header'\n\nimport MovieItem from '../MovieItem'\n\nimport './index.css'\n\nconst pageStatus = {\n  Loading: 'LOADING',\n  Success: 'SUCCESS',\n  Failed: 'FAILED',\n  Empty: 'EMPTY',\n}\n\nclass Search extends Component {\n  state = {status: '', searchList: [], searched: ''}\n\n  tryAgain = () => {\n    const {searched} = this.state\n    this.fetchData(searched)\n  }\n\n  searchRoute = () => {\n    const {status} = this.state\n\n    switch (status) {\n      case pageStatus.Success:\n        return this.SuccessView()\n      case pageStatus.Loading:\n        return this.loadingView()\n      case pageStatus.Failed:\n        return this.failureView()\n      case pageStatus.Empty:\n        return this.emptyView()\n      default:\n        return null\n    }\n  }\n\n  emptyView = () => {\n    const {searched} = this.state\n\n    return (\n      <div className=\"search-container search-fv\">\n        <img\n          alt=\"no movies\"\n          src=\"https://res.cloudinary.com/reddyimgs/image/upload/v1687101303/Group_7394_gadzmp.png\"\n        />\n\n        <p className=\"search-not-found-para\">\n          {`Your search for ${searched} did not find any matches.`}\n        </p>\n      </div>\n    )\n  }\n\n  SuccessView = () => {\n    const {searchList} = this.state\n\n    return (\n      <ul className=\"popular-container\">\n        {searchList.map(each => (\n          <MovieItem key={each.id} items={each} />\n        ))}\n      </ul>\n    )\n  }\n\n  failureView = () => (\n    <div className=\"search-fv\">\n      <p> Something went wrong. Please try again </p>\n\n      <button type=\"button\" className=\"try-again-btn\" onClick={this.tryAgain}>\n        Try Again\n      </button>\n    </div>\n  )\n\n  loadingView = () => (\n    <div className=\"search-lv\" data-testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n    </div>\n  )\n\n  fetchData = async valueOFSearch => {\n    this.setState({status: pageStatus.Loading, searched: valueOFSearch})\n\n    const jwtToken = Cookies.get('jwt_token')\n\n    const requiredUrl = `https://apis.ccbp.in/movies-app/movies-search?search=${valueOFSearch}`\n\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    try {\n      const response = await fetch(requiredUrl, options)\n\n      const data = await response.json()\n\n      if (response.ok) {\n        const receivedResults = data.results\n\n        const fetchedData = receivedResults.map(each => ({\n          backdropPath: each.backdrop_path,\n          id: each.id,\n          overview: each.overview,\n          posterPath: each.poster_path,\n          title: each.title,\n        }))\n\n        const isEmpty = fetchedData.length === 0\n\n        if (isEmpty) {\n          this.setState({status: pageStatus.Empty, searched: valueOFSearch})\n        } else {\n          this.setState({status: pageStatus.Success, searchList: fetchedData})\n        }\n      } else {\n        this.setState({status: pageStatus.Failed})\n      }\n    } catch (error) {\n      this.setState({status: pageStatus.Failed})\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header fetchData={this.fetchData} />\n\n        {this.searchRoute()}\n      </>\n    )\n  }\n}\n\nexport default Search\n","import Cookies from 'js-cookie'\n\nimport Header from '../Header'\n\nimport Contacts from '../Contacts'\n\nimport './index.css'\n\nconst Account = props => {\n  const loggingOut = () => {\n    const {history} = props\n\n    Cookies.remove('jwt_token')\n\n    history.replace('/login')\n  }\n\n  return (\n    <div className=\"account-container\">\n      <Header />\n      <div className=\"account-card\">\n        <h1 className=\"account-heading\">Account</h1>\n        <hr />\n        <div className=\"membership-container\">\n          <p className=\"membership-text\">Member ship</p>\n          <div>\n            <p className=\"mail-text\">reddybharshith3@gmail.com</p>\n            <p className=\"password-text\">Password : ********</p>\n          </div>\n        </div>\n        <hr />\n        <div className=\"plan-container\">\n          <p className=\"membership-text\">Plan details</p>\n          <p>Premium</p>\n          <p className=\"ultra-text\">Ultra HD</p>\n        </div>\n        <hr />\n        <div className=\"logout-button-container\">\n          <button className=\"logout-button\" onClick={loggingOut} type=\"button\">\n            Logout\n          </button>\n        </div>\n      </div>\n\n      <Contacts />\n    </div>\n  )\n}\nexport default Account\n","import {Component} from 'react'\n\nimport Cookies from 'js-cookie'\n\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\n\nimport MovieItem from '../MovieItem'\n\nimport Contacts from '../Contacts'\n\nimport './index.css'\n\nconst pageStatus = {\n  Loading: 'LOADING',\n  Success: 'SUCCESS',\n  Failed: 'FAILED',\n}\n\nclass Popular extends Component {\n  state = {status: 'LOADING', popularList: []}\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  tryAgain = () => {\n    this.fetchData()\n  }\n\n  popularView = () => {\n    const {status} = this.state\n\n    switch (status) {\n      case pageStatus.Success:\n        return this.successView()\n\n      case pageStatus.Loading:\n        return this.loadingView()\n\n      case pageStatus.Failed:\n        return this.failureView()\n\n      default:\n        return null\n    }\n  }\n\n  successView = () => {\n    const {popularList} = this.state\n\n    return (\n      <ul className=\"popular-container\">\n        {popularList.map(each => (\n          <MovieItem key={each.id} items={each} />\n        ))}\n      </ul>\n    )\n  }\n\n  failureView = () => (\n    <div className=\"popular-fv\">\n      <img\n        src=\"https://res.cloudinary.com/reddyimgs/image/upload/v1687103762/alert-triangle_fqs6cl.png\"\n        alt=\"failure view \"\n      />\n\n      <p> Something went wrong. Please try again </p>\n\n      <button type=\"button\" className=\"try-again-btn\" onClick={this.tryAgain}>\n        Try Again\n      </button>\n    </div>\n  )\n\n  loadingView = () => (\n    <div className=\"popular-lv\" data-testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n    </div>\n  )\n\n  fetchData = async () => {\n    this.setState({status: pageStatus.Loading})\n\n    const jwtToken = Cookies.get('jwt_token')\n\n    const requiredUrl = 'https://apis.ccbp.in/movies-app/popular-movies'\n\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    try {\n      const response = await fetch(requiredUrl, options)\n\n      if (response.ok === true) {\n        const data = await response.json()\n\n        const recievedResults = data.results\n\n        const fetchedData = recievedResults.map(each => ({\n          backdropPath: each.backdrop_path,\n          id: each.id,\n          overview: each.overview,\n          posterPath: each.poster_path,\n          title: each.title,\n        }))\n\n        this.setState({status: pageStatus.Success, popularList: fetchedData})\n      } else {\n        this.setState({status: pageStatus.Failed})\n      }\n    } catch (error) {\n      this.setState({status: pageStatus.Failed})\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n\n        {this.popularView()}\n\n        <Contacts />\n      </>\n    )\n  }\n}\n\nexport default Popular\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <h1 className=\"not-found-heading\">Lost Your Way ?</h1>\n\n    <p className=\"not-found-para\">\n      we are sorry, the page you requested could not be found Please go back to\n      the homepage.\n    </p>\n\n    <div>\n      <Link to=\"/\">\n        <button className=\"not-found-button\" type=\"button\">\n          Go to Home\n        </button>\n      </Link>\n    </div>\n  </div>\n)\n\nexport default NotFound\n","import {Link} from 'react-router-dom'\n\nimport {Component} from 'react'\n\nimport Loader from 'react-loader-spinner'\n\nimport Cookies from 'js-cookie'\n\nimport Header from '../Header'\n\nimport Contacts from '../Contacts'\n\nimport MovieItem from '../MovieItem'\n\nimport './index.css'\n\nconst pageStatus = {\n  Loading: 'LOADING',\n  Success: 'SUCCESS',\n  Failed: 'FAILED',\n}\n\nclass MovieDetails extends Component {\n  state = {status: 'LOADING', movieDetails: [], similarMoviesList: []}\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  tryAgain = () => {\n    this.fetchData()\n  }\n\n  movieDetailsView = () => {\n    const {status} = this.state\n\n    switch (status) {\n      case pageStatus.Success:\n        return this.SuccessView()\n      case pageStatus.Loading:\n        return this.loadingView()\n      case pageStatus.Failed:\n        return this.failureView()\n      default:\n        return null\n    }\n  }\n\n  getDateFormat = () => {\n    const {movieDetails} = this.state\n\n    const {releaseDate} = movieDetails\n\n    const releasedDateInFormat = new Date(releaseDate)\n\n    const monthNames = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ]\n\n    const dateOf = releasedDateInFormat.getDate()\n\n    let dateOfRel\n\n    switch (dateOf) {\n      case 1:\n        dateOfRel = '1st'\n\n        break\n\n      case 2:\n        dateOfRel = '2nd'\n\n        break\n\n      case 3:\n        dateOfRel = '3rd'\n\n        break\n\n      case 21:\n        dateOfRel = '21st'\n\n        break\n\n      case 22:\n        dateOfRel = '22nd'\n\n        break\n\n      case 31:\n        dateOfRel = '31st'\n\n        break\n\n      case 23:\n        dateOfRel = '23rd'\n\n        break\n\n      default:\n        dateOfRel = `${dateOf}th`\n    }\n\n    const dayOfRel = monthNames[releasedDateInFormat.getMonth()]\n\n    const yearOfRel = releasedDateInFormat.getFullYear()\n\n    const formattedDate = `${dateOfRel} ${dayOfRel} ${yearOfRel}`\n\n    return formattedDate\n  }\n\n  SuccessView = () => {\n    const {movieDetails, similarMoviesList} = this.state\n\n    const {\n      backdropPath,\n      title,\n      runtime,\n      adult,\n      releaseDate,\n      overview,\n      id,\n      genres,\n      spokenLanguage,\n      voteCount,\n      voteAverage,\n      budget,\n    } = movieDetails\n\n    const dateF = this.getDateFormat()\n\n    return (\n      <div>\n        <div\n          className=\"poster-container\"\n          style={{\n            backgroundImage: `linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(24, 24, 24, 0.2896875) 78.26%, #181818 93.82%, #181818 96.68%, #181818 108.61%) , url(${backdropPath})`,\n          }}\n        >\n          <div className=\"poster-content-movie-details\">\n            <h1 className=\"movie-details-heading\">{title}</h1>\n\n            <ul className=\"movie-details-runtime-container\">\n              <li>\n                <p>{`${Math.floor(runtime / 60)}h ${runtime % 60}m`}</p>\n              </li>\n              <li>\n                <p className=\"sensor\">{adult ? 'A' : 'U/A'}</p>\n              </li>\n\n              <li>\n                <p>{releaseDate.slice(0, 4)}</p>\n              </li>\n            </ul>\n\n            <p className=\"poster-para\">{overview}</p>\n\n            <div>\n              <Link to={`/movies/${id}`}>\n                <button className=\"poster-button\" type=\"submit\">\n                  Play\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"movies-sector\">\n          <div className=\"movie-details-genres-container\">\n            <div>\n              <h1 className=\"detail-head\">Genres </h1>\n              <ul className=\"genre-list genre\">\n                {genres.map(each => (\n                  <li key={each.id}>\n                    <p>{each.name}</p>\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            <div>\n              <h1 className=\"detail-head \">Audio Available</h1>\n              <ul className=\"genre-list genre\">\n                {spokenLanguage.map(each => (\n                  <li key={each.id}>\n                    <p> {each.english_name}</p>{' '}\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            <div>\n              <h1 className=\"detail-head \">Rating Count</h1>\n              <ul className=\"genre-list genre\">\n                <li>\n                  <p> {voteCount}</p>{' '}\n                </li>\n              </ul>\n            </div>\n\n            <div>\n              <h1 className=\"detail-head \">Rating Average</h1>\n              <ul className=\"genre-list genre\">\n                <li>\n                  <p>{voteAverage}</p>{' '}\n                </li>\n              </ul>\n            </div>\n\n            <div>\n              <h1 className=\"detail-head \">Budget</h1>\n              <ul className=\"genre-list genre\">\n                <li>\n                  <p>{budget} </p>\n                </li>\n              </ul>\n            </div>\n\n            <div>\n              <h1 className=\"detail-head \">Release Date</h1>\n              <ul className=\"genre-list genre\">\n                <li>\n                  <p> {dateF}</p>{' '}\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div>\n            <h1 className=\"more-head\">More like this</h1>\n\n            <ul className=\"more-like-container\">\n              {similarMoviesList.map(each => (\n                <MovieItem key={each.id} items={each} />\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  failureView = () => (\n    <div className=\"movies-details-lv\">\n      <img\n        src=\"https://res.cloudinary.com/reddyimgs/image/upload/v1687103762/alert-triangle_fqs6cl.png\"\n        alt=\"failure view\"\n      />\n\n      <p> Something went wrong. Please try again </p>\n\n      <button type=\"button\" onClick={this.tryAgain}>\n        Try Again\n      </button>\n    </div>\n  )\n\n  loadingView = () => (\n    <div className=\"movies-details-lv\" data-testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#D81F26\" height={50} width={50} />\n    </div>\n  )\n\n  fetchData = async () => {\n    this.setState({status: pageStatus.Loading})\n\n    const jwtToken = Cookies.get('jwt_token')\n\n    const {match} = this.props\n\n    const {params} = match\n\n    const {id} = params\n\n    const requiredUrl = `https://apis.ccbp.in/movies-app/movies/${id}`\n\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n\n    try {\n      const response = await fetch(requiredUrl, options)\n\n      if (response.ok) {\n        const data = await response.json()\n\n        const receivedMovieDetails = data.movie_details\n\n        const receivedSimilarMovies = receivedMovieDetails.similar_movies\n\n        const similarMovies = receivedSimilarMovies.map(each => ({\n          backdropPath: each.backdrop_path,\n          id: each.id,\n          overview: each.overview,\n          posterPath: each.poster_path,\n          title: each.title,\n        }))\n\n        const fetchedData = {\n          adult: receivedMovieDetails.adult,\n          backdropPath: receivedMovieDetails.backdrop_path,\n          budget: receivedMovieDetails.budget,\n          genres: receivedMovieDetails.genres,\n          id: receivedMovieDetails.id,\n          overview: receivedMovieDetails.overview,\n          posterPath: receivedMovieDetails.poster_path,\n          releaseDate: receivedMovieDetails.release_date,\n          runtime: receivedMovieDetails.runtime,\n          spokenLanguage: receivedMovieDetails.spoken_languages,\n          title: receivedMovieDetails.title,\n          voteAverage: receivedMovieDetails.vote_average,\n          voteCount: receivedMovieDetails.vote_count,\n        }\n\n        this.setState({\n          status: pageStatus.Success,\n          similarMoviesList: similarMovies,\n          movieDetails: fetchedData,\n        })\n      } else {\n        this.setState({status: pageStatus.Failed})\n      }\n    } catch (error) {\n      this.setState({status: pageStatus.Failed})\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n\n        {this.movieDetailsView()}\n\n        <Contacts />\n      </>\n    )\n  }\n}\n\nexport default MovieDetails\n","import {Switch, Route, Redirect} from 'react-router-dom'\n\nimport ProtectedRoute from './components/ProtectedRoute'\n\nimport Login from './components/Login'\n\nimport Home from './components/Home'\n\nimport Search from './components/Search'\n\nimport Account from './components/Account'\n\nimport Popular from './components/Popular'\n\nimport NotFound from './components/NotFound'\n\nimport MovieDetails from './components/MovieDetails'\n\nimport './App.css'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n\n    <ProtectedRoute exact path=\"/\" component={Home} />\n\n    <ProtectedRoute exact path=\"/popular\" component={Popular} />\n\n    <ProtectedRoute exact path=\"/movies/:id\" component={MovieDetails} />\n\n    <ProtectedRoute exact path=\"/search\" component={Search} />\n\n    <ProtectedRoute exact path=\"/account\" component={Account} />\n\n    <Route path=\"/not-found\" component={NotFound} />\n\n    <Redirect to=\"not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {HashRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}